import java.io.*;
import java.lang.*;

class Node{
    
    int data;
    Node left,right;
    
    Node(int data){
        this.data=data;
        left=right=null;
    }
}
class BinaryTree{
    
    Node root;
    
    BinaryTree(){
        root=null;
    }

  void breadthFirstSearch(){
      
      int h =height(root);
      for(int i=0;i<=h;i++){
          printLevelOrder(root,i);
      }
  }
  
    int height(Node root){
        if(root==null)
        return 0;
        else{
           int lheight= height(root.left);
           int rheight= height(root.right);
           
           if(lheight>rheight)
           return (lheight+1);
           else 
           return (rheight+1);
    }
} 

     void printLevelOrder(Node root,int level){
         
         if(root==null)
         return;
         
         if(level==1)
         System.out.println(root.data+" ");
         else if(level>1)
         {
            printLevelOrder(root.left,level-1);
            printLevelOrder(root.right,level-1);
         }
         
     }


    public static void main(String[] args){
        
        BinaryTree b = new BinaryTree();
         b.root = new Node(1);
         b.root.left = new Node(3);
         b.root.right = new Node(5);
         b.root.left.left = new Node(7);
         b.root.left.right = new Node(9);
         
         System.out.println("Level order traversal of binary tree is "); 
             b.breadthFirstSearch();
    }
}
